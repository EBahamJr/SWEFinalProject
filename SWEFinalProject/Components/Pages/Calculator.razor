@page "/calculator"
@rendermode InteractiveServer

<PageTitle>Calculator</PageTitle>
<center>
    <style>
        .row {
            display: flex;
        }

        .column {
            padding: 15px 5px;
            justify-content: center;
            align-content: flex-start;
            color: black;
            flex: 50%;
            flex-direction:column;
        }

        .flex-container {
            display: flex;
            justify-content: flex-start;
            height: 350px;
            background-color: white;
            border-style: solid;
            flex-direction:row;
        }

        .flex-container2 {
            display: flex;
            justify-content: center;
            height: 100px;
            background-color: none;
        }

        .container{
            display: flex;
            justify-content: center;
            border-style: solid;
            background-color: lightgray;
        }

        .result-container {
            display: flex;
            justify-content: center;
            border-style: solid;
            background-color: @CardColor;
        }

        .button {
            border: black;
            color: lightgrey;
            text-align: center;
            text-decoration: solid;
            -webkit-text-fill-color: black;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-style: solid;
            width: 100%;
        }

            .button:hover {
                background-color: #04AA6D; /* Green */
                color: white;
            }
    </style>
    <h1>Calculator <button type="button" class="button" value="ClearButton" @onclick="clearButton">clear</button></h1>
    <div class="result-container">Result: @resultTxt</div>
    <form>
        <div class="flex-container2">
            <div class="column">
                <p role="label">Input A:</p> <input type="text" id="Anum" name="Anum" @bind="@temp1" @oninput="updateNumA">
            </div>
            <div class="column">
                <p role="label">Input B:</p> <input type="text" id="Bnum" name="Bnum" @bind="@temp2" @oninput="updateNumB">
            </div>
        </div>
    </form>
    <div class= "flex-container">
        <div class="column">
            <div class="label container">A and B</div>
            <button type="button" class="button" value="AdditionButton" @onclick="AdditionButton">A + B</button>
            <button type="button" class="button" value="AdditionButton" @onclick="AdditionButton">A - B</button>
            <button type="button" class="button" value="AdditionButton" @onclick="AdditionButton">A * B</button>
            <button type="button" class="button" value="AdditionButton" @onclick="AdditionButton">A / B</button>
            <button type="button" class="button" value="AdditionButton" @onclick="AdditionButton">A == B</button>
            <button type="button" class="button" value="AdditionButton" @onclick="AdditionButton">A ^ B</button>
            <button type="button" class="button" value="AdditionButton" @onclick="AdditionButton">A log B</button>
            <button type="button" class="button" value="AdditionButton" @onclick="AdditionButton">A root B</button>
        </div>
        <div class="column">
            <div class="label container">A Only</div>
            <button type="button" class="button" value="AbsoluteValue" @onclick="AdditionButton">A!</button>
            <button type="button" class="button" value="AbsoluteValue" @onclick="AdditionButton">sin A</button>
            <button type="button" class="button" value="AbsoluteValue" @onclick="AdditionButton">cos A</button>
            <button type="button" class="button" value="AbsoluteValue" @onclick="AdditionButton">tan A</button>
            <button type="button" class="button" value="AbsoluteValue" @onclick="AdditionButton">1 / A</button>
        </div>
    </div>
</center>

@code {
    //string s = Anum.text;

    Functions.CalculatorFunctions myOperation = new();

    private string CardColor = "lightgray";
    //lightgray
    //string s = Anum.string;
    private bool invalid = false;

    private bool bInval = false;
    private bool aInval = false;

    private string resultTxt = "";
    public float result = 0;

    private string temp1 = "";
    private string temp2 = "";

    private float Anum = 0;
    private float Bnum = 0;

    public void clearButton()
    {
        temp1 = "";
        temp2 = "";
        Anum = 0;
        Bnum = 0;
        resultTxt = "";
        CardColor = "lightgray";
    }

    public void updateResultTxtAB(string functionSymbol)
    {
        resultTxt = 
        Anum + " " + functionSymbol + " " + Bnum +
        " = " + result;
    }
    public void updateResultTxtA(string functionSymbol)
    {
        resultTxt = functionSymbol + " " + Anum + " = " + result;
    }

    public void updateNumA(ChangeEventArgs changeEvent)
    {
        temp1 = (string)changeEvent.Value;
        if (temp1 != "")
        {
            aInval = !float.TryParse(temp1, out Anum);
        }
        else
        {
            Anum = 0;
        }
        invalid = aInval || bInval;
    }
    public void updateNumB(ChangeEventArgs changeEvent)
    {
        temp2 = (string)changeEvent.Value;
        if (temp2 != "")
        {
            bInval = !float.TryParse(temp2, out Bnum);
        }
        else
        {
            Bnum = 0;
        }
        invalid = aInval || bInval;
    }

    public void setUpAB()
    {
        CardColor = "lightgray";
        myOperation.SetA(Anum);
        myOperation.SetB(Bnum);
    }
    public void setUpA()
    {
        CardColor = "lightgray";
        myOperation.SetA(Anum);
    }

    //A and B function
    private void AdditionButton()//+
    {
        if (!invalid)
        {
            setUpAB();
            result = myOperation.CalcAdd();
            updateResultTxtAB("+");
        }
        else
        {
            resultTxt = "Invalid Entry";
            CardColor = "red";
        }
    }
    private void SubtractionButton()//-
    {
        if (!invalid)
        {
            setUpAB();
            result = myOperation.CalcAdd();
            updateResultTxtAB("+");
        }
        else
        {
            resultTxt = "Invalid Entry";
            CardColor = "red";
        }
    }
    private void MultiplicationButton()//*
    {
        if (!invalid)
        {
            setUpAB();
            result = myOperation.CalcAdd();
            updateResultTxtAB("+");
        }
        else
        {
            resultTxt = "Invalid Entry";
            CardColor = "red";
        }
    }
    private void DivisionButton()// /
    {
        if (!invalid)
        {
            setUpAB();
            result = myOperation.CalcAdd();
            updateResultTxtAB("+");
        }
        else
        {
            resultTxt = "Invalid Entry";
            CardColor = "red";
        }
    }
    // ==
    
    // ^

    // log

    // root

    //A only Function

    // !

    // sin

    // cos

    // tan

    // 1/A
}
